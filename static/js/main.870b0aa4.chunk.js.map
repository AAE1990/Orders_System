{"version":3,"sources":["components/MenuNav/MenuNav.module.css","components/ListOrders/ListOrders.module.css","components/MakeOrder/MakeOrder.module.css","components/OrderData/OrderData.jsx","components/OrderData/PresentsOrder.jsx","components/OrderData/OrderDataContainer.jsx","components/MenuNav/MenuNav.jsx","redux/orderResult-reduser.js","components/MakeOrder/MakeOrder.jsx","components/MakeOrder/MakeOrderContainer.jsx","components/ListOrders/ListOrders.jsx","components/ListOrders/ListOrderContainer.jsx","App.js","serviceWorker.js","redux/orderData-reducer.js","redux/redux-store.js","index.js"],"names":["module","exports","OrderData","props","titleHeader","PresentsOrder","state","orderData","OrderDataContainer","connect","MenuNav","className","style","button1","type","to","nvb1","textDecoration","button2","nvb2","initialState","IninitalData","FirmData","EmailData","TelData","DateOrder","orderResultReducer","action","MakeOrder","editMode","handleInitialChange","value","target","setState","handleFirmChange","handleEmailChange","handleTelChange","handleDateChange","activateEditMode","editOrder","editOrder2","editOrder3","editOrder4","editOrder5","handleSnow","e","preventDefault","this","formCaseMO","divFormDesign","onChange","formDesign","name","inputData","pattern","htmlFor","labelDate","id","inputDatE","onClick","buttonForm","trigger","buttonPopup","popupOrder","popupOrderH","React","Component","MakeOrderContainer","orderResultData","dispatch","InitialDataCreator","FirmDataCreator","EmailDataCreator","TelDataCreator","DateOrderCreator","ListOrders","lisrOrdersBlock","ListOrderContainer","App","path","render","Boolean","window","location","hostname","match","orderDataReducers","reducers","combineReducers","store","createStore","renderEntireTree","ReactDOM","document","getElementById","subscribe","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.870b0aa4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"MenuNav\":\"MenuNav_MenuNav__A31aJ\",\"button1\":\"MenuNav_button1__2LrUT\",\"nvb1\":\"MenuNav_nvb1__7P_Nz\",\"button2\":\"MenuNav_button2__2eMDJ\",\"nvb2\":\"MenuNav_nvb2__2DXI2\",\"titleHeader\":\"MenuNav_titleHeader__2GYRe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"lisrOrdersBlock\":\"ListOrders_lisrOrdersBlock__1jREQ\",\"popupOrderH\":\"ListOrders_popupOrderH__1Wgrd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formCaseMO\":\"MakeOrder_formCaseMO__e_JZn\",\"divFormDesign\":\"MakeOrder_divFormDesign__1qsw4\",\"inputData\":\"MakeOrder_inputData__2cAj2\",\"labelDate\":\"MakeOrder_labelDate__1fHxc\",\"inputDatE\":\"MakeOrder_inputDatE__2rPeT\",\"buttonForm\":\"MakeOrder_buttonForm__dIxiM\",\"buttonPopup\":\"MakeOrder_buttonPopup__2EPC6\",\"popupOrder\":\"MakeOrder_popupOrder__32fhS\",\"popupOrderH\":\"MakeOrder_popupOrderH__1daDh\"};","import React from 'react';\r\n\r\nconst OrderData = (props) => {\r\n\r\n    return (\r\n        <div>\r\n            {props.titleHeader}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OrderData;","import React from 'react';\r\nimport OrderData from './OrderData';\r\n\r\nconst PresentsOrder = (props) => {\r\n    \r\n    let state = props.orderData;\r\n\r\n    return (\r\n        <h3>\r\n            <OrderData titleHeader={state.titleHeader} />\r\n        </h3>\r\n    )\r\n}\r\n\r\nexport default PresentsOrder;","import {connect} from \"react-redux\"\r\nimport PresentsOrder from \"./PresentsOrder\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        orderData: state.orderData\r\n    }\r\n}\r\n\r\nconst OrderDataContainer = connect(mapStateToProps) (PresentsOrder);\r\n\r\nexport default OrderDataContainer;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport OrderDataContainer from '../OrderData/OrderDataContainer';\r\nimport style from './MenuNav.module.css'\r\n\r\nconst MenuNav = () => {\r\n    return (\r\n        <div className={style.MenuNav}>\r\n\r\n            <div className={style.button1}>\r\n                <button type=\"button\" className=\"btn btn-secondary btn-lg mr-5\">\r\n                    <NavLink to=\"/makeorder\" className={style.nvb1}\r\n                        style={{textDecoration: 'none'}}>Оформить Заявку\r\n                    </NavLink>\r\n                </button>\r\n            </div>\r\n\r\n            <div className={style.titleHeader}><OrderDataContainer /></div>\r\n\r\n            <div className={style.button2}>\r\n                <button type=\"button\" className=\"btn btn-secondary btn-lg ml-5\">\r\n                    <NavLink to=\"/listorders\" className={style.nvb2} \r\n                        style={{textDecoration: 'none'}}>Список Заявок\r\n                    </NavLink>\r\n                </button>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MenuNav;\r\n\r\n","const INITIAL_DATA = 'INITIAL_DATA';\r\nconst FIRM_DATA = 'FIRM_DATA';\r\nconst EMAIL_DATA = 'EMAIL_DATA';\r\nconst TEL_DATA = 'TEL_DATA';\r\nconst DATE_ORDER = 'DATE_ORDER';\r\n\r\nlet initialState = {\r\n    IninitalData: '',\r\n    FirmData: '',\r\n    EmailData: '',\r\n    TelData: '',\r\n    DateOrder: ''\r\n};\r\n\r\nconst orderResultReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIAL_DATA: {\r\n            return {\r\n                ...state,\r\n                IninitalData: action.IninitalData,\r\n            }\r\n        }\r\n        case FIRM_DATA: {\r\n            return {\r\n                ...state,\r\n                FirmData: action.FirmData\r\n            }\r\n        }\r\n        case EMAIL_DATA: {\r\n            return {\r\n                ...state,\r\n                EmailData: action.EmailData\r\n            }\r\n        }\r\n        case TEL_DATA: {\r\n            return {\r\n                ...state,\r\n                TelData: action.TelData\r\n            }\r\n        }\r\n        case DATE_ORDER: {\r\n            return {\r\n                ...state,\r\n                DateOrder: action.DateOrder\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const InitialDataCreator = (IninitalData) => ({ type: INITIAL_DATA, IninitalData });\r\nexport const FirmDataCreator = (FirmData) => ({ type: FIRM_DATA, FirmData })\r\nexport const EmailDataCreator = (EmailData) => ({ type: EMAIL_DATA, EmailData })\r\nexport const TelDataCreator = (TelData) => ({ type: TEL_DATA, TelData })\r\nexport const DateOrderCreator = (DateOrder) => ({ type: DATE_ORDER, DateOrder })\r\n\r\nexport default orderResultReducer;","import React, { Fragment } from 'react';\r\nimport style from './MakeOrder.module.css'\r\nimport Popup from 'reactjs-popup';\r\nimport 'reactjs-popup/dist/index.css';\r\n\r\nclass MakeOrder extends React.Component {\r\n\r\n    state = {\r\n        editMode: this.props.editMode,\r\n        IninitalData: this.props.IninitalData,\r\n        FirmData: this.props.FirmData,\r\n        EmailData: this.props.EmailData,\r\n        TelData: this.props.TelData,\r\n        DateOrder: this.props.DateOrder\r\n    }\r\n\r\n    handleInitialChange = ({ target: { value } }) => {\r\n        this.setState({\r\n            IninitalData: value,\r\n        })\r\n    }\r\n\r\n    handleFirmChange = ({ target: { value } }) => {\r\n        this.setState({\r\n            FirmData: value\r\n        })\r\n    }\r\n\r\n    handleEmailChange = ({ target: { value } }) => {\r\n        this.setState({\r\n            EmailData: value\r\n        })\r\n    }\r\n\r\n    handleTelChange = ({ target: { value } }) => {\r\n        this.setState({\r\n            TelData: value\r\n        })\r\n    }\r\n\r\n    handleDateChange = ({ target: { value } }) => {\r\n        this.setState({\r\n            DateOrder: value\r\n        })\r\n    }\r\n\r\n    activateEditMode = ({ target: { value } }) => {\r\n        this.setState({\r\n            editMode: value\r\n        });\r\n        this.props.editOrder(this.state.IninitalData);\r\n        this.props.editOrder2(this.state.FirmData);\r\n        this.props.editOrder3(this.state.EmailData);\r\n        this.props.editOrder4(this.state.TelData);\r\n        this.props.editOrder5(this.state.DateOrder);\r\n    }\r\n\r\n    handleSnow = (e) => {\r\n        e.preventDefault();\r\n        this.setState({\r\n            IninitalData: '',\r\n            FirmData: '',\r\n            EmailData: '',\r\n            TelData: '',\r\n            DateOrder: ''\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { IninitalData, FirmData, EmailData, TelData, DateOrder } = this.state;\r\n\r\n        return (\r\n            <div className={style.formCaseMO}>\r\n                <h3>Оформить Заявку</h3>\r\n\r\n                <div className={style.divFormDesign}>\r\n                    <Fragment>\r\n                        <form onChange={this.activateEditMode} className={style.formDesign}>\r\n                            <label>\r\n                                Ф.И.О.\r\n                            <br />\r\n                                <input type=\"text\" name=\"initial\" value={IninitalData}\r\n                                    onChange={this.handleInitialChange} className={style.inputData}\r\n                                />\r\n                                <br />\r\n\r\n                            Фирма:\r\n                            <br />\r\n                                <input type=\"text\" name='firm' value={FirmData}\r\n                                    onChange={this.handleFirmChange} className={style.inputData} />\r\n                                <br />\r\n\r\n                            Email:\r\n                            <br />\r\n                                <input type=\"email\" name=\"login\" value={EmailData}\r\n                                    onChange={this.handleEmailChange} className={style.inputData} />\r\n                                <br />\r\n\r\n                            Телефон:\r\n                            <br />\r\n                                <input type=\"tel\" pattern=\"2-[0-9]{3}-[0-9]{3}\" value={TelData}\r\n                                    onChange={this.handleTelChange} className={style.inputData} />\r\n                            </label>\r\n                            <br />\r\n\r\n                            <label htmlFor=\"dateelements\" className={style.labelDate}>Дата оформления:</label>\r\n                            <br />\r\n                            <input type=\"datetime-local\" id=\"dateelements\" className={style.inputDatE}\r\n                                value={DateOrder} onChange={this.handleDateChange} />\r\n                            <br />\r\n\r\n                            <button onClick={this.handleSnow} className={style.buttonForm} >Отправить</button>\r\n                            <br />\r\n                        </form>\r\n                    </Fragment>\r\n\r\n                    <Popup trigger={<button className={style.buttonPopup}> Справка после отправки:</button>}>\r\n                        <div className={style.popupOrder}>\r\n                            <div className={style.popupOrderH}>\r\n                                <h3>Введенные данные хронятся в Списке Заявок\r\n                                <br />и после просмотра в справке:</h3>\r\n                                <h4>{this.state.IninitalData}</h4>\r\n                                <h4>{this.state.FirmData}</h4>\r\n                                <h4>{this.state.EmailData}</h4>\r\n                                <h4>{this.state.TelData}</h4>\r\n                                <h4>{this.state.DateOrder}</h4>\r\n                            </div>\r\n                        </div>\r\n                    </Popup>\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MakeOrder;\r\n","import { connect } from \"react-redux\";\r\nimport { DateOrderCreator, EmailDataCreator, FirmDataCreator, InitialDataCreator, TelDataCreator } from \"../../redux/orderResult-reduser\";\r\nimport MakeOrder from \"./MakeOrder\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        orderResultData: state.orderResultData,\r\n        IninitalData: state.orderResultData.IninitalData,\r\n        FirmData: state.orderResultData.FirmData,\r\n        EmailData: state.orderResultData.EmailData,\r\n        TelData: state.orderResultData.TelData,\r\n        DateOrder: state.orderResultData.DateOrder\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        editOrder: (IninitalData) => {\r\n            dispatch(InitialDataCreator(IninitalData));\r\n        },\r\n        editOrder2: (FirmData) => {\r\n            dispatch(FirmDataCreator(FirmData));\r\n        },\r\n        editOrder3: (EmailData) => {\r\n            dispatch(EmailDataCreator(EmailData));\r\n        },\r\n        editOrder4: (TelData) => {\r\n            dispatch(TelDataCreator(TelData));\r\n        },\r\n        editOrder5: (DateOrder) => {\r\n            dispatch(DateOrderCreator(DateOrder));\r\n        }\r\n    }\r\n}\r\n\r\nconst MakeOrderContainer = connect(mapStateToProps, mapDispatchToProps)(MakeOrder);\r\n\r\nexport default MakeOrderContainer;","import React from 'react';\r\nimport style from './ListOrders.module.css'\r\n\r\nconst ListOrders = (props) => {\r\n    return (\r\n        <div className={style.lisrOrdersBlock}>\r\n            <div className={style.popupOrderH}>\r\n                <h3>Список Заявок:</h3>\r\n                <br/>\r\n                <h4>{props.IninitalData}</h4>\r\n                <h4>{props.FirmData}</h4>\r\n                <h4>{props.EmailData}</h4>\r\n                <h4>{props.TelData}</h4>\r\n                <h4>{props.DateOrder}</h4>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ListOrders;\r\n\r\n","import { connect } from \"react-redux\";\r\nimport ListOrders from \"./ListOrders\"\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        orderResultData: state.orderResultData,\r\n        IninitalData: state.orderResultData.IninitalData,\r\n        FirmData: state.orderResultData.FirmData,\r\n        EmailData: state.orderResultData.EmailData,\r\n        TelData: state.orderResultData.TelData,\r\n        DateOrder: state.orderResultData.DateOrder\r\n    }\r\n}\r\n\r\nconst ListOrderContainer = connect(mapStateToProps)(ListOrders);\r\n\r\nexport default ListOrderContainer;","import React from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport MenuNav from './components/MenuNav/MenuNav';\nimport { Route, Switch } from 'react-router-dom';\nimport MakeOrderContainer from './components/MakeOrder/MakeOrderContainer';\nimport ListOrderContainer from './components/ListOrders/ListOrderContainer';\n\n\nfunction App() {\n  return (\n    <div className=\"app-wrapper\">\n\n      <div className='app-wrapper-content'>\n        <MenuNav/>\n        <Switch>\n          <Route path=\"/makeorder\" render={() => <MakeOrderContainer />} />\n          <Route path=\"/listorders\" render={() => <ListOrderContainer/>} />          \n        </Switch>\n      </div>\n\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const TITLE_HEADER = \"TITLE_HEADER\";\r\n\r\nlet initialState = {\r\n    titleHeader: \"Система введения заявок \"  \r\n};\r\n\r\n\r\nconst orderDataReducers = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case TITLE_HEADER: {\r\n            return {\r\n                ...state,\r\n                titleHeader: {...state.titleHeader}\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const showTitleHeader = (titleHeader) => ({ type: TITLE_HEADER, titleHeader});\r\n\r\nexport default orderDataReducers;","import { createStore, combineReducers,  } from \"redux\";\r\nimport orderDataReducers from \"./orderData-reducer\";\r\nimport orderResultReducer from \"./orderResult-reduser\";\r\n\r\nlet reducers = combineReducers({\r\n    orderData: orderDataReducers,\r\n    orderResultData: orderResultReducer, \r\n});\r\n\r\nconst store = createStore(reducers);\r\n\r\nwindow.store = store;\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport store from './redux/redux-store';\nimport { BrowserRouter } from 'react-router-dom';\n\nlet renderEntireTree = () => {\n  ReactDOM.render(\n    <BrowserRouter>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </BrowserRouter>, document.getElementById('root')\n  );\n}\n\nrenderEntireTree();\n\nstore.subscribe(() => {\n  renderEntireTree();\n})\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}